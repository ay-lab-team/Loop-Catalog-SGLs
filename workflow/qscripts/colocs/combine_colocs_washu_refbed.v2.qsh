#PBS -l nodes=1:ppn=1
#PBS -l mem=4gb
#PBS -l walltime=100:00:00
#PBS -e results/main/coloc/logs/
#PBS -o results/main/coloc/logs/
#PBS -N raw_colocs_to_washu_refbed
#PBS -d .
#PBS -V

# # run bash in strict mode
set -euo pipefail
IFS=$'\n\t'

# load helper functions and paths
source workflow/qscripts/helper_functions.sh

# start message
echo "Start Job"
echo "Running script: workflow/qscripts/colocs/combine_colocs_washu_refbed.qsh"


# setting the output paths
outfn="results/main/GRCh37/coloc/Results/combined.refbed.bed.gz"
echo "outfn: ${outfn} - $(path_exists $outfn)"
echo


# stop running if output exists
if [[ -e "${outfn}" ]]
then
    echo "output.outfn: ${outfn} already exists."
    echo "Not running the rest of this script."

    # end message
    #echo "End Job: Already Exists"
    #exit
fi


# extracting sample information
samplesheet="config/coloc_samplesheets/coloc.samplesheet.tsv"
echo "Using samplesheet: ${samplesheet}"


# combine refbeds
echo "# combine refbeds"
while read -r info;
do
    IFS=$'\t'
    run_info=( $info )
    IFS=$'\n\t' # can go back to using \n\t

    gwas_source=${run_info[0]}
    eqtl_source=${run_info[1]}
    ge_source=${run_info[2]}

    if [[ "$eqtl_source" == "ImmuNexUT" ]]
    then
        eqtl_db="ImmuNexUT"
    else
        eqtl_db="eQTL_Catalogue"
    fi

    # printing log information
    echo "gwas_source: $gwas_source"
    echo "eqtl_db: $eqtl_db"
    echo "eqtl_source: $eqtl_source"
    echo "ge_source: $ge_source"
    echo

    # append current file
    curr_refbed="results/main/GRCh37/coloc/Results/${eqtl_db}/${gwas_source}/${eqtl_source}/${ge_source}/FINAL_Summary_Coloc_Gene_SNP_Pairs.gene_sorted.with_gene_meta.bed.gz"
    echo "curr_refbed: $curr_refbed"
    interm_bed="results/main/GRCh37/coloc/Results/${gwas_source}.${eqtl_source}.combined.refbed.bed"
    if [[ -f $curr_refbed ]];
    then
        if [[ ! -f $interm_bed ]];
        then
            zcat $curr_refbed > $interm_bed
        else
            zcat $curr_refbed >> $interm_bed
        fi 
    fi

done < $samplesheet


# tabix the gwas_source 
while read -r info;
do
    IFS=$'\t'
    run_info=( $info )
    IFS=$'\n\t' # can go back to using \n\t

    gwas_source=${run_info[0]}
    eqtl_source=${run_info[1]}
    ge_source=${run_info[2]}

    if [[ "$eqtl_source" == "ImmuNexUT" ]]
    then
        eqtl_db="ImmuNexUT"
    else
        eqtl_db="eQTL_Catalogue"
    fi

    # printing log information
    echo "gwas_source: $gwas_source"
    echo "eqtl_db: $eqtl_db"
    echo "eqtl_source: $eqtl_source"
    echo "ge_source: $ge_source"
    echo


    # sort the interm refbed
    echo "# sort the interm refbed"
    interm_bed="results/main/GRCh37/coloc/Results/${gwas_source}.${eqtl_source}.combined.refbed.bed"
    sorted_bed="results/main/GRCh37/coloc/Results/${gwas_source}.${eqtl_source}.combined.refbed.sorted.bed"

read -r cmd << EOM
cat $interm_bed \
    | sed "s/chr//1" \
    | sort -k1n -k2n -k3n \
    | awk 'BEGIN{FS="\\t"; OFS="\\t"}; {print "chr" \$0}' \
    > $sorted_bed
EOM
    echo "Running: ${cmd}"
    echo
    eval $cmd


    # bgzip + tabix
    echo "# bgzip + tabix"
    cmd="${bgzip} -f $sorted_bed; $tabix -f $sorted_bed.gz"
    echo "Running: ${cmd}"
    echo
    eval $cmd

done < <(sed '1d' $samplesheet)


# remove intermediate files
echo "# remove intermediate files"
#cmd="rm"
#echo "Running: ${cmd}"
#echo
#eval $cmd


# end message
echo "End Job"
