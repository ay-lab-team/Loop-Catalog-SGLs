#PBS -l nodes=1:ppn=1
#PBS -l mem=32gb
#PBS -l walltime=100:00:00
#PBS -e results/main/eqtl/logs/
#PBS -o results/main/eqtl/logs/
#PBS -N convert_eqtls_to_washu_with_onekg_vcf
#PBS -d .
#PBS -V

# # run bash in strict mode
set -euo pipefail
IFS=$'\n\t'

mkdir -p results/temp

# rule calculate_number_of_eqtls_pre_filtering: # (Status: developing)
# Count the number of eqtl after filtering with FDR

# dummy value when not running with qsub
echo
if [[ -z ${PBS_ARRAYID+x} ]]
then
    echo "Running with bash, setting PBS_ARRAYID=\$1=$1"
    PBS_ARRAYID=$1
else
    echo "Running with qsub, PBS_ARRAYID=$PBS_ARRAYID"
fi
echo

# load helper functions and paths
source workflow/qscripts/helper_functions.sh

# start message
echo "Start Job"

# extracting sample information
IFS=$'\t'
samplesheet="config/eqtl_samplesheets/eqtl.t1d_only.txt"
run_info=( $(sed -n "${PBS_ARRAYID}p" $samplesheet) )
eqtl_source=${run_info[0]}
ge_source=${run_info[1]}

if [[ "$eqtl_source" == "ImmuNexUT" ]]
then
    eqtl_db="ImmuNexUT"
else
    eqtl_db="eQTL_Catalogue"
fi

echo "Using samplesheet: ${samplesheet}"

gwas_source=${run_info[0]}
IFS=$'\n\t' # can go back to using \n\t


# printing log information
echo "eqtl_db: $eqtl_db"
echo "eqtl_source: $eqtl_source"
echo "ge_source: $ge_source"
echo


# setting the input paths
input="results/main/eqtl/${eqtl_source}/ge/${eqtl_source}_ge_${ge_source}.all.dist.fdr.tsv.gz"
onekg="results/refs/ensembl/variation/1000GENOMES-phase_3.vcf.gz"
gencode_id2name="results/refs/gencode/v30/gencode.v30.annotation.grch37.id_to_name.tsv"
echo "input: ${input} - $(path_exists $input)"
echo "input: ${onekg} - $(path_exists $onekg)"
echo "input: ${gencode_id2name} - $(path_exists $gencode_id2name)"
echo


# setting the output paths
final_onekg_vcf_gz="results/main/eqtl/${eqtl_source}/ge/${eqtl_source}_ge_${ge_source}.all.dist.fdr.onekg.anno.vcf.gz"
echo "output.final_onekg_vcf_gz: ${final_onekg_vcf_gz} - $(path_exists $final_onekg_vcf_gz)"
echo


# stop running if output exists
if [[ -e "${final_onekg_vcf_gz}" ]]
then
    echo "outfn: ${final_onekg_vcf_gz} already exists."
    echo "Not running the rest of this script."

    # end message
    echo "End Job"
    #exit
fi


# make output directories that are not present 
mkdir -p $(dirname ${final_onekg_vcf_gz})


if [[ "$eqtl_db" == "ImmuNexUT" ]]
then
chr=1 
pos=2

#########################################################################################
# filter the onekg
#########################################################################################

# create bed regions file from input eQTL
echo "# create bed regions file from input GWAS"
regions="results/main/eqtl/${eqtl_source}/ge/${eqtl_source}_ge_${ge_source}.all.dist.fdr.regions.txt"
#| sed -n "1,200000p" \
read -r cmd << EOM
zcat $input \
    | awk 'BEGIN{OFS="\\t"}; {print \$$chr, \$$pos};' \
    | uniq \
    | sed "s/chr//" \
    | sed "1d" \
    > ${regions}
EOM
echo "Running: ${cmd}"
echo
eval $cmd


# filter the onekg for Sig GWAS SNPs
echo "# filter the onekg for Sig GWAS SNPs"
filtered="results/main/eqtl/${eqtl_source}/ge/${eqtl_source}_ge_${ge_source}.all.dist.fdr.onekg.vcf.gz"
cmd="$bcftools view -R $regions --types snps $onekg | $bcftools sort -O z -T results/temp > $filtered"
echo "Running: ${cmd}"
echo
eval $cmd


# index the filtered onekg
echo "# index the filtered onekg"
filtered_index="results/main/eqtl/${eqtl_source}/ge/${eqtl_source}_ge_${ge_source}.all.dist.fdr.onekg.vcf.gz.tbi"
cmd="$tabix -f $filtered"
echo "Running: ${cmd}"
echo
eval $cmd


##########################################################################################
## add gene name to eQTL SS
##########################################################################################
echo "# print the header"
gsort_eqtl_ss="results/main/eqtl/${eqtl_source}/ge/${eqtl_source}_ge_${ge_source}.all.dist.fdr.sorted.tsv"
cmd="echo 'geneid	chr	pos	dist	slope	pval	fdr' > ${gsort_eqtl_ss}"
echo "Running: ${cmd}"
echo
eval $cmd

echo "# sort the eqtl ss by geneid"
#| sed -n '1,200000p' \
read -r cmd << EOM
zcat ${input} \
        | awk 'BEGIN{OFS="\t"}; {geneid=gensub(/(ENSG[0-9]+)\.[0-9]+/, "\\\\1", 1, \$3); print geneid, \$1, \$2, \$4, \$5, \$6, \$7}' \
        | sed '1d' \
        | sort -k1 \
        >> ${gsort_eqtl_ss}
EOM
echo "Running: ${cmd}"
echo
eval $cmd


echo "# add gene name to eQTL SS"
eqtl_ss_genenames="results/main/eqtl/${eqtl_source}/ge/${eqtl_source}_ge_${ge_source}.all.dist.fdr.genename.txt"
cmd="join -1 1 -2 1 --header -t $'\t' ${gsort_eqtl_ss} ${gencode_id2name} > ${eqtl_ss_genenames}"
echo "Running: ${cmd}"
echo
eval $cmd


#########################################################################################
## add eQTL SS info to onekg 
## this requires using bcftools annotate which requires: 1) a file with VCF info meta data
## 2) bed file with new annotation fill in bed format and 3) names of the new columns/info
## which correspond with the bed file from (2).
##########################################################################################

# create the header 
echo "# create the header"
header="results/main/eqtl/${eqtl_source}/ge/${eqtl_source}_ge_${ge_source}.all.dist.fdr.header.txt"
$bcftools view --header $onekg | grep -v "^#CHROM" > $header
echo '##INFO=<ID=eQTL_GENE,Number=1,Type=String,Description="eQTL GENE",Source="eQTL Catalog">' >> $header
echo '##INFO=<ID=eQTL_DIST,Number=1,Type=Integer,Description="eQTL DIST",Source="eQTL Catalog">' >> $header
echo '##INFO=<ID=eQTL_BETA,Number=1,Type=Float,Description="eQTL BETA",Source="eQTL Catalog">' >> $header
echo '##INFO=<ID=eQTL_P,Number=1,Type=Float,Description="eQTL P",Source="eQTL Catalog">' >> $header
echo '##INFO=<ID=eQTL_FDR,Number=1,Type=Float,Description="eQTL FDR",Source="eQTL Catalog">' >> $header
echo '#CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO' >> $header


# create a joinable eQTL SS file
echo "# create a joinable eQTL SS file"
joinable_anno="results/main/eqtl/${eqtl_source}/ge/${eqtl_source}_ge_${ge_source}.all.dist.fdr.anno.txt"
read -r cmd << EOM
cat ${eqtl_ss_genenames} \
    | sed '1d' \
    | sed "s/chr//g" \
    | awk 'BEGIN{OFS="\t"}; {ID=\$2 ":" \$3; info="eQTL_GENE=" \$8 ";eQTL_GENEID=" \$3 ";eQTL_P=" \$6 ";eQTL_BETA=" \$5 ";eQTL_DIST=" \$4 ";eQTL_FDR=" \$7; print ID, info;}' \
    | sort -k1 \
    > $joinable_anno
EOM
echo "Running: ${cmd}"
echo
eval $cmd


# create a joinable onekg file
echo "# create a joinable onekg file"
joinable_onekg_vcf="results/main/eqtl/${eqtl_source}/ge/${eqtl_source}_ge_${ge_source}.all.dist.fdr.onekg.vcf.joinable.txt"
read -r cmd << EOM
$bcftools view --no-header $filtered \
    | awk 'BEGIN{OFS="\t"}; {ID=\$1 ":" \$2; print ID, \$1, \$2, \$3, \$4, \$5, \$6, \$7, \$8};' \
    | sort -k1 \
    > $joinable_onekg_vcf
EOM
echo "Running: ${cmd}"
echo
eval $cmd


# join the onekg file and the eQTL SS
echo "# join the onekg file and the eQTL SS"
onekg_anno_vcf="results/main/eqtl/${eqtl_source}/ge/${eqtl_source}_ge_${ge_source}.all.dist.fdr.onekg.anno.vcf.temp"
read -r cmd << EOM
join -1 1 -2 1 -t $'\t' $joinable_onekg_vcf $joinable_anno \
                | cut -f 1 --complement -d $'\t' \
                | awk 'BEGIN{OFS="\t"}; {print \$1, \$2, \$3, \$4, \$5, \$6, \$7, \$8 ";" \$9};' \
                > $onekg_anno_vcf
EOM
echo "Running: ${cmd}"
echo
eval $cmd


# create the final vcf
final_onekg_vcf="results/main/eqtl/${eqtl_source}/ge/${eqtl_source}_ge_${ge_source}.all.dist.fdr.onekg.anno.vcf"
final_onekg_vcf_gz="results/main/eqtl/${eqtl_source}/ge/${eqtl_source}_ge_${ge_source}.all.dist.fdr.onekg.anno.vcf.gz"
cmd="cat $header $onekg_anno_vcf | $bcftools view --with-header -O u - | $bcftools sort -O z -T results/temp - > $final_onekg_vcf_gz;"
cmd+="$tabix $final_onekg_vcf_gz"
echo "Running: ${cmd}"
echo
eval $cmd


elif [[ "$eqtl_db" == "eQTL_Catalogue" ]]
then

chr=2
pos=3

#########################################################################################
# filter the onekg
#########################################################################################

# create bed regions file from input eQTL
echo "# create bed regions file from input GWAS"
regions="results/main/eqtl/${eqtl_source}/ge/${eqtl_source}_ge_${ge_source}.all.dist.fdr.regions.txt"
#| sed -n "1,100000p" \
read -r cmd << EOM
zcat $input \
    | awk 'BEGIN{OFS="\\t"}; {print \$$chr, \$$pos};' \
    | uniq \
    | sed "s/chr//" \
    | sed "1d" \
    > ${regions}
EOM
echo "Running: ${cmd}"
echo
eval $cmd


# filter the onekg for Sig GWAS SNPs
echo "# filter the onekg for Sig GWAS SNPs"
filtered="results/main/eqtl/${eqtl_source}/ge/${eqtl_source}_ge_${ge_source}.all.dist.fdr.onekg.vcf.gz"
cmd="$bcftools view -R $regions --types snps $onekg | $bcftools sort -O z -T results/temp > $filtered"
echo "Running: ${cmd}"
echo
eval $cmd


# index the filtered onekg
echo "# index the filtered onekg"
filtered_index="results/main/eqtl/${eqtl_source}/ge/${eqtl_source}_ge_${ge_source}.all.dist.fdr.onekg.vcf.gz.tbi"
cmd="$tabix -f $filtered"
echo "Running: ${cmd}"
echo
eval $cmd


##########################################################################################
## add gene name to eQTL SS
##########################################################################################
echo "# print the header"
gsort_eqtl_ss="results/main/eqtl/${eqtl_source}/ge/${eqtl_source}_ge_${ge_source}.all.dist.fdr.sorted.tsv"
cmd="zcat ${input} | sed -n '1p' > ${gsort_eqtl_ss}"
echo "Running: ${cmd}"
echo
eval $cmd

echo "# sort the eqtl ss"
#| sed -n '1,100000p'
cmd="zcat ${input} | sed '1d' | sort -k1 >> ${gsort_eqtl_ss}"
echo "Running: ${cmd}"
echo
eval $cmd

echo "# add gene name to eQTL SS"
eqtl_ss_genenames="results/main/eqtl/${eqtl_source}/ge/${eqtl_source}_ge_${ge_source}.all.dist.fdr.genename.txt"
cmd="join -1 1 -2 1 --header -t $'\t' ${gsort_eqtl_ss} ${gencode_id2name} > ${eqtl_ss_genenames}"
echo "Running: ${cmd}"
echo
eval $cmd

#########################################################################################
## add eQTL SS info to onekg 
## this requires using bcftools annotate which requires: 1) a file with VCF info meta data
## 2) bed file with new annotation fill in bed format and 3) names of the new columns/info
## which correspond with the bed file from (2).
##########################################################################################

# create the header 
echo "# create the header"
header="results/main/eqtl/${eqtl_source}/ge/${eqtl_source}_ge_${ge_source}.all.dist.fdr.header.txt"
$bcftools view --header $onekg | grep -v "^#CHROM" > $header
echo '##INFO=<ID=eQTL_GENE,Number=1,Type=String,Description="eQTL GENE",Source="eQTL Catalog">' >> $header
echo '##INFO=<ID=eQTL_N,Number=1,Type=Integer,Description="eQTL N",Source="eQTL Catalog">' >> $header
echo '##INFO=<ID=eQTL_MAF,Number=1,Type=Float,Description="eQTL MAF",Source="eQTL Catalog">' >> $header
echo '##INFO=<ID=eQTL_P,Number=1,Type=Float,Description="eQTL P",Source="eQTL Catalog">' >> $header
echo '##INFO=<ID=eQTL_BETA,Number=1,Type=Float,Description="eQTL BETA",Source="eQTL Catalog">' >> $header
echo '##INFO=<ID=eQTL_SE,Number=1,Type=Float,Description="eQTL SE",Source="eQTL Catalog">' >> $header
echo '##INFO=<ID=eQTL_GENEID,Number=1,Type=String,Description="eQTL GENEID",Source="eQTL Catalog">' >> $header
echo '##INFO=<ID=eQTL_Median_TPM,Number=1,Type=Float,Description="eQTL Median TPM",Source="eQTL Catalog">' >> $header
echo '##INFO=<ID=eQTL_DIST,Number=1,Type=Integer,Description="eQTL DIST",Source="eQTL Catalog">' >> $header
echo '##INFO=<ID=eQTL_FDR,Number=1,Type=Float,Description="eQTL FDR",Source="eQTL Catalog">' >> $header
echo '#CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO' >> $header


# create a joinable eQTL SS file
echo "# create a joinable eQTL SS file"
joinable_anno="results/main/eqtl/${eqtl_source}/ge/${eqtl_source}_ge_${ge_source}.all.dist.fdr.anno.txt"
read -r cmd << EOM
cat ${eqtl_ss_genenames} \
    | sed '1d' \
    | sed "s/chr//g" \
    | awk 'BEGIN{OFS="\t"}; {ID=\$2 ":" \$3; info="eQTL_GENE=" \$22 ";eQTL_N=" \$7 ";eQTL_MAF=" \$8 ";eQTL_P=" \$9 ";eQTL_BETA=" \$10 ";eQTL_SE=" \$11 ";eQTL_GENEID=" \$17 ";eQTL_Median_TPM=" \$18 ";eQTL_DIST=" \$20 ";eQTL_FDR=" \$21; print ID, info;}' \
    | sort -k1 \
    > $joinable_anno
EOM
echo "Running: ${cmd}"
echo
eval $cmd


# create a joinable onekg file
echo "# create a joinable onekg file"
joinable_onekg_vcf="results/main/eqtl/${eqtl_source}/ge/${eqtl_source}_ge_${ge_source}.all.dist.fdr.onekg.vcf.joinable.txt"
read -r cmd << EOM
$bcftools view --no-header $filtered \
    | awk 'BEGIN{OFS="\t"}; {ID=\$1 ":" \$2; print ID, \$1, \$2, \$3, \$4, \$5, \$6, \$7, \$8};' \
    | sort -k1 \
    > $joinable_onekg_vcf
EOM
echo "Running: ${cmd}"
echo
eval $cmd


# join the onekg file and the eQTL SS
echo "# join the onekg file and the eQTL SS"
onekg_anno_vcf="results/main/eqtl/${eqtl_source}/ge/${eqtl_source}_ge_${ge_source}.all.dist.fdr.onekg.anno.vcf.temp"
read -r cmd << EOM
join -1 1 -2 1 -t $'\t' $joinable_onekg_vcf $joinable_anno \
                | cut -f 1 --complement -d $'\t' \
                | awk 'BEGIN{OFS="\t"}; {print \$1, \$2, \$3, \$4, \$5, \$6, \$7, \$8 ";" \$9};' \
                > $onekg_anno_vcf
EOM
echo "Running: ${cmd}"
echo
eval $cmd

# create the final vcf
final_onekg_vcf="results/main/eqtl/${eqtl_source}/ge/${eqtl_source}_ge_${ge_source}.all.dist.fdr.onekg.anno.vcf"
final_onekg_vcf_gz="results/main/eqtl/${eqtl_source}/ge/${eqtl_source}_ge_${ge_source}.all.dist.fdr.onekg.anno.vcf.gz"
cmd="cat $header $onekg_anno_vcf | $bcftools view --with-header -O u - | $bcftools sort -O z -T results/temp - > $final_onekg_vcf_gz;"
cmd+="$tabix $final_onekg_vcf_gz"
echo "Running: ${cmd}"
echo
eval $cmd

fi


#########################################################################################
# remove intermediate files
#########################################################################################
echo "# remove intermediate files"
cmd="rm $regions $filtered $filtered_index $eqtl_ss_genenames $header $joinable_anno $joinable_onekg_vcf $onekg_anno_vcf"
echo "Running: ${cmd}"
echo
eval $cmd

# end message
echo "End Job"
